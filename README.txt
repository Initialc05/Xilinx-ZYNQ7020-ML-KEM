基于盘古100Pro+ 开发板的后量子加密算法部署、优化与IP Core开发

文档版本修订记录
日期	文档版本	修订记录	适用 IP 
03-11	V1.0	1. 初始版本。	——
03-12	V1.1	1.补充“附录：板卡选择”。
            2.补充“附录：术语解释”。	——
03-15	V2.0	1.修改文章框架并调整排版。	——
03-17	V2.1	1.细化明确目标功能。
            2.删减部分“附录：术语解释”的内容。	——
	    V2.2	1.更改文件名为“盘古100 Pro+ IP开发”。
            2.添加“赛事介绍”部分。
            3.细化删减“目标”部分相关描述，明确重点。
            4.“技术关键点”部分明确硬件实现和优化需求，给出可能的方案。
            5.完善“开发计划”部分。	——
    	V2.3	1.更改文件名为“集创赛紫光同创杯方向三”。
            2.统一相关术语使用标准，完善排版方式。	——
03-20	V3.0	1.对于不确定的方案后面加上了“*”做标记。
            2.添加“产品展示”部分。
            3.添加“文档编写与视频制作方案”部分。	——

0. 选题：基于紫光同创FPGA的创新应用系统
方向三：基于紫光同创FPGA的IP Core开发

0.1 要求
要求采用紫光同创logos2系列的开发板，并使用SerDes接口(PCIe或者光纤接口的一种或者多种)，实现基于SerDes的IP Core协议，要求该IP有相应的产品形态及实际工程价值，诸如：CPRI、PCIE QDMA等，发挥创意、充分体现FPGA并行处理优势和紫光同创SerDes性能，优先推荐具有工程实践意义或具有创意的作品。

0.2 评分标准
考核内容	分值	评分依据
功能及工程价值	80分	IP Core 协议的兼容性(30分) 
IP Core 参数配置的灵活性(10分) 
与同类IP横向对标的资源及性能展示(10分) 
IP Core 配套文档的原理及功能说明(20分) 
基于IP Core的工程及产品展示(10分) 
现场汇报及答辩	20分	现场功能演示效果及对比说明

0.3 提交资料
(1)IP Core核心代码的原理文档		
(2)逻辑资源使用报告及横向对比文档	
(3)兼容性测试报告
(4)作品功能及兼容性演示视频
(5)配套IP Core的使用方法说明

2. 目标
   
本项目旨在基于紫光同创logos2系列的开发板，开发NIST后量子加密算法(PQC)标准下ML-KEM密钥封装算法(KEM)的硬件加速IP Core(以下简称IP），以提升处理速度和数据吞吐量，减少功耗和降低开发者使用难度。通过PCIe接口与计算机高效交互，充分发挥FPGA的并行计算能力和紫光同创PCIe接口的高性能，打造高效、灵活的加解密硬件加速解决方案。
为实现这一目标，项目将利用PCIe接口确保FPGA与PC间的低延迟、高吞吐量的数据传输，结合FPGA的硬件加速能力提升加解密速度。同时，开发具有兼容性与安全性C语言驱动程序和标准API，初期支持Windows，后续扩展至Linux。此外，项目采用FPGA的并行计算与流水线设计优化硬件架构，在提高处理能力的同时降低功耗，实现高效能与低能耗的平衡。

4. 关键技术点
2.1 PC与FPGA交互
采用雷电4-PCIe转接板搭建PC-FPGA双向数据传输链路，使上层应用能够通过标准读写操作与FPGA进行交互。

2.2 ML-KEM算法的实现
本项目专注于实现后量子加密算法中的ML-KEM密钥封装算法，通过紫光同创提供的Pango Design Suite 2022.2-SP6.4(PDS2022.2) 软件和Verilog语言开发硬件模块，实现加密与解密操作以及硬件优化策略。

2.3 硬件优化策略* 	(标记 * 的具体方案待确定，仅给出方案示例)

2.3.1 流水线设计*
通过流水线技术，将计算任务划分为多个并行处理的阶段。每个阶段负责不同的计算任务，确保算法能够并行执行，提升整体计算吞吐量。

2.3.2 并行计算结构*
充分利用FPGA的并行处理能力，使多个计算任务能够同时执行，进一步提升加解密处理速度。

2.3.3 低功耗设计*
优化硬件架构，采取动态功耗管理和资源共享策略，确保在高吞吐量任务下能够保持较低的功耗。

2.4 数据传输稳定性及错误处理*
为了确保PC与FPGA之间的数据传输稳定性，采用CRC和ECC技术进行错误检测与纠正，防止数据丢失或误传。通过硬件流控机制自动调整传输速率，避免数据溢出，并实现传输重试机制确保数据完整性。

2.5 驱动封装*
通过C语言开发硬件驱动，封装FPGA的寄存器操作，使PC端应用能够通过标准API与FPGA加速模块进行交互。简化了上层应用的使用，减少了开发者的复杂度。驱动封装确保了FPGA硬件加速功能的易用性，提供了稳定的接口，支持不同操作系统的兼容性测试，确保系统在实际应用中能够高效、可靠地运行。

6. 开发计划	(各阶段具体所需时间待确定)
3.1 启动与基础准备
(1)确定团队成员和工作分工，完成技术方案文档和项目详细规划。
(2)搭建并调试开发环境，确保工具链、开发板、PCIe接口等硬件资源准备完毕。
(3)进行项目的初步调研，确定ML-KEM算法的硬件实现框架。
(4)完成项目的技术方案设计和可行性分析。

3.2 FPGA接口与基础硬件开发
(1)实现PC与FPGA之间的基础通信，确保PC与FPGA之间能够正常进行数据传输。
(2)测试数据传输各项指标，记录文档。

3.3 算法实现与优化 
(1)实现ML-KEM密钥封装算法在FPGA上的硬件加速，确保加解密算法在FPGA上能够高效运行，满足处理速度、数据吞吐量、资源占用、运行功耗、系统兼容性等重要指标。
(2)测试和调试硬件模块，确保任务在不同负载情况下稳定运行。
(3)测试算法运行相关指标，对不同优化方案进行文档记录。

3.4 驱动开发与接口封装
(1)开发硬件驱动程序，封装寄存器操作并提供标准API接口，确保PC端软件能够访问和调用FPGA硬件加速功能。
(2)完成驱动与硬件的兼容性测试，确保系统稳定运行。
(3)编写驱动文档。

3.5 文档编写与最终交付
(1)完成项目文档的编写，包括核心代码的原理文档、使用说明书、测试报告和兼容性报告。
(2)制作功能演示视频，展示项目成果的实际应用效果。
(3)提交项目报告和演示资料，完成答辩准备。 

8. 产品展示
4.1 呈现形式
(1)基于可视化软件工具绘制算法执行过程中的数据变化，展示算法的逻辑结构和数据流向。
(2)直接展示算法的部分运行过程和结果。
(3)借助PPT进行整个项目的概述，包括基本开发流程、工程意义、评价指标、产品可拓展性以及创新点等。
(4)产品功能及兼容性演示视频。

4.2 呈现内容*

4.2.1 产品性能
具体指标待挑选，需要实际上手先实现算法再对运行表现做性能分析；同时也可参考国内外有关的论文，并在其中找寻性能指标选取方案。

4.2.2 横向对比优势
选取与赛事规定开发板对标的产品，如从Xilinx、TI等其他公司的产品中进行选择，并在这些开发板上进行算法的部署，对其运行表现做相关测试。
横向对比采取“一对多”、“田忌赛马”的策略，当前(03-20)正在研究在Xilinx ZYNQ7020上部署算法的可行性，预计本周末(03-23)前可以拿出可行的部署方案，以供后续对比工作。

4.2.3 创新点

4.2.4 工程意义

4.2.5 实际应用价值

4.2.6 未来发展方向

5. 文档编写与视频制作方案
   
5.1 IP Core核心代码的原理文档

5.2 逻辑资源使用报告及横向对比文档

5.3 兼容性测试报告

5.4 作品功能及兼容性演示视频

5.5 配套IP Core的使用方法说明

附录1	板卡选择
盘古676系列开发板
盘古676系列开发板(MES2L676, 国产FPGA权威指南教材的配套板卡)，共有2款板卡：支持100k和200k两种逻辑规模，主控分别为：Logos-2 ：PG2L100H-6IFBG676和PG2L200H-6IFBB676，底板兼容设计。板卡采用了核心板+扩展底板的结构，核心板与扩展底板之间使用高速板间连接器进行连接。主控和DDR3之间的数据传输时钟频率最高为533 MHz，2颗DDR3的数据位宽为32 bit，总的数据带宽最高到34112 Mbps(1066×32=34112)。另外，MES2L676板卡带有8路HSSTLP高速串行收发器，每路的数据传输速率高达6.6 Gbps。MES2L676开发板预留了2路光纤接口、1路SMA高速收发接口、1路PCIe Gen2 ×4数据通信接口、1路HDMI收发接口、1路10/100/1000 Mbps的以太网接口，以及1组FMC LPC扩展接口(符合FMC接口规范，可用于外接FMC模块)。

附录2	术语解释
@ SerDes(Serializer/Deserializer)
SerDes是一种串行-并行转换技术，用于在高速通信中减少数据通道数量，提高传输效率。本项目中SerDes用于PCIe物理层，确保FPGA与PC间的高速数据传输。

@ PCIe(Peripheral Component Interconnect Express)高速接口
PCIe是一种高性能、高速串行计算机总线标准，用于连接计算机内部的各种硬件组件，如显卡、SSD 和 FPGA 等。在本项目中，PCIe 用于 PC 与 FPGA 之间的高速数据交互，保证低延迟和高吞吐率。PCIe 设备可通过 DMA 直接与系统内存交互，减少 CPU 负担，提高数据传输效率。

@ FIPS(Federal Information Processing Standards)203标准     @ ML-KEM 密钥封装算法
FIPS是美国国家标准与技术研究院(NIST)制定的信息安全标准，其中FIPS 203定义了格密码学(Lattice-Based Cryptography)ML-KEM密钥封装算法,是本项目重点关注的算法。

@ 哈希算法 Hash Algorithm
哈希算法(SHA-256、SHA-3、BLAKE2)是一种将任意长度输入转换为固定长度输出的算法，常用于数据完整性校验和密码学应用。在本项目中，哈希算法可用于PQC 的密钥派生和数字签名中的消息摘要计算。

@ 对称加密 Symmetrical Encryption
对称加密(AES、DES、ChaCha20)使用相同的密钥进行加密和解密，计算效率高，常用于数据加密、通信安全。在本项目中，对称加密(如 AES) 可用于PQC生成的会话密钥加密数据，确保传输安全。

@ 密钥封装算法 KEM(Key Encapsulation Mechanism) 
KEM是一种安全密钥交换机制，通常用于公钥加密系统，用于生成和共享对称密钥。在本项目中，KEM 用于后量子安全密钥交换，确保密钥不被量子计算机破解。KEM分为密钥生成(接收方生成公钥和私钥)、密钥封装(发送方使用公钥生成对称密钥，并将其封装加密)和密钥解封(接收方使用私钥解密对称密钥)。

@ 寄存器封装与 API
寄存器封装是指为硬件寄存器提供统一的抽象接口，软件开发者可通过 API 访问底层硬件功能。在本项目中，寄存器封装用于提供标准驱动接口(C语言API)，方便应用层调用 FPGA 的加密功能。
